{
  "_args": [
    [
      {
        "raw": "windows-process-tree@https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
        "scope": null,
        "escapedName": "windows-process-tree",
        "name": "windows-process-tree",
        "rawSpec": "https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
        "spec": "https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
        "type": "remote"
      },
      "D:\\work\\agent1\\1\\s"
    ]
  ],
  "_from": "windows-process-tree@0.1.6",
  "_id": "windows-process-tree@0.1.6",
  "_inCache": true,
  "_location": "/windows-process-tree",
  "_phantomChildren": {},
  "_requested": {
    "raw": "windows-process-tree@https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
    "scope": null,
    "escapedName": "windows-process-tree",
    "name": "windows-process-tree",
    "rawSpec": "https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
    "spec": "https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
  "_shasum": "c2d942a944152ea749a4c1c0bdb769b2f570639f",
  "_shrinkwrap": null,
  "_spec": "windows-process-tree@https://registry.npmjs.org/windows-process-tree/-/windows-process-tree-0.1.6.tgz",
  "_where": "D:\\work\\agent1\\1\\s",
  "author": {
    "name": "Microsoft Corporation"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-windows-process-tree/issues"
  },
  "dependencies": {
    "nan": "^2.6.2"
  },
  "description": "Fetch a Windows process tree fast",
  "devDependencies": {
    "mocha": "^3.5.0"
  },
  "gypfile": true,
  "homepage": "https://github.com/Microsoft/vscode-windows-process-tree",
  "license": "MIT",
  "main": "lib/index.js",
  "name": "windows-process-tree",
  "optionalDependencies": {},
  "os": [
    "win32"
  ],
  "readme": "# windows-process-tree\n\nQuickly fetch a process tree information for a particular process ID on Windows using Node.js.\n\n## Usage\n\n```js\nif (process.platform === 'win32') {\n  var child_process = require('child_process');\n  var windowsProcessTree = require('windows-process-tree');\n\n  child_process.spawn('cmd.exe');\n  windowsProcessTree(process.pid, (tree) => {\n    console.log(tree);\n  });\n  // { pid: 11168,\n  //   name: 'node.exe',\n  //   children:\n  //    [ { pid: 1472, name: 'cmd.exe', children:[] },\n\n  windowsProcessTree(0, (tree) => {\n    console.log(tree);\n  });\n  // undefined\n}\n```\n\n## Why a native node module?\n\nThe current convention is to run wmic.exe to query a particular process ID and then parse the output like so:\n\n```js\nlet cp = require('child_process');\n\nfunction getChildProcessDetails(pid, cb) {\n    let args = ['process', 'where', `parentProcessId=${pid}`, 'get', 'ExecutablePath,ProcessId'];\n    cp.execFile('wmic.exe', args, (err, stdout, stderr) => {\n        if (err) {\n            throw new Error(err);\n        }\n        if (stderr.length > 0) {\n            cb([]);\n        }\n        var childProcessLines = stdout.split('\\n').slice(1).filter(str => !/^\\s*$/.test(str));\n        var childProcessDetails = childProcessLines.map(str => {\n            var s = str.split('  ');\n            return { executable: s[0], pid: Number(s[1]) };\n        });\n        cb(childProcessDetails);\n    });\n}\n```\n\nThis has two problems:\n\n1. It takes > 100ms\\* to spin up a process and get the output returned.\n2. It only goes one level deep. Meaning, if the process tree is deeply nested or processes in the tree have many children it will take a lot more time and need a bunch of processes launched.\n\nBoth of which are only exacerbated by the fact that this information is something that a consumer may want to poll for.\n\nThe native node module uses Windows APIs to get the process details and then they are organized into a tree, getting the entire tree's details in < 20ms\\*.\n\n\\* On my machine :slightly_smiling_face:\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Microsoft/vscode-windows-process-tree.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "mocha"
  },
  "version": "0.1.6"
}
